{"uid":"e9d91515c912a881","name":"TC 006 - Проверка функциональности ссылки 'Обратный звонок'","fullName":"tests.test_main_page.TestMainPage#test_positive_footer_back_call_smoke","historyId":"8a1ebd75b8bb4dbf0f8c6237ff40e90b","time":{"start":1690333216544,"stop":1690333216544,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 298.879\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x5628745704e3 <unknown>\n#1 0x56287429fc76 <unknown>\n#2 0x562874289284 <unknown>\n#3 0x562874288fa0 <unknown>\n#4 0x5628742879bf <unknown>\n#5 0x562874288162 <unknown>\n#6 0x5628742960d5 <unknown>\n#7 0x562874297222 <unknown>\n#8 0x5628742a9bcb <unknown>\n#9 0x5628742ae3ab <unknown>\n#10 0x562874288703 <unknown>\n#11 0x5628742a99ab <unknown>\n#12 0x562874313523 <unknown>\n#13 0x5628742fade3 <unknown>\n#14 0x5628742d02dd <unknown>\n#15 0x5628742d134e <unknown>\n#16 0x5628745303e4 <unknown>\n#17 0x5628745343d7 <unknown>\n#18 0x56287453eb20 <unknown>\n#19 0x562874535023 <unknown>\n#20 0x5628745031aa <unknown>\n#21 0x5628745596b8 <unknown>\n#22 0x562874559847 <unknown>\n#23 0x562874569243 <unknown>\n#24 0x7f417e882fd4 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d2b1289c9f3ba6819126dc02604a2b1a\")>\nurl = 'https://stroyrem-nn.ru/'\n\n    @pytest.fixture\n    def main_page(driver, url):\n        page = MainPage(driver)\n>       driver.get(url)\n\nconftest.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:355: in get\n    self.execute(Command.GET, {\"url\": url})\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f8625d5ae10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#22 0x562874559847 \\\\u003Cunknown>\\\\n#23 0x562874569243 \\\\u003Cunknown>\\\\n#24 0x7f417e882fd4 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 298.879\nE         (Session info: headless chrome=114.0.5735.198)\nE       Stacktrace:\nE       #0 0x5628745704e3 <unknown>\nE       #1 0x56287429fc76 <unknown>\nE       #2 0x562874289284 <unknown>\nE       #3 0x562874288fa0 <unknown>\nE       #4 0x5628742879bf <unknown>\nE       #5 0x562874288162 <unknown>\nE       #6 0x5628742960d5 <unknown>\nE       #7 0x562874297222 <unknown>\nE       #8 0x5628742a9bcb <unknown>\nE       #9 0x5628742ae3ab <unknown>\nE       #10 0x562874288703 <unknown>\nE       #11 0x5628742a99ab <unknown>\nE       #12 0x562874313523 <unknown>\nE       #13 0x5628742fade3 <unknown>\nE       #14 0x5628742d02dd <unknown>\nE       #15 0x5628742d134e <unknown>\nE       #16 0x5628745303e4 <unknown>\nE       #17 0x5628745343d7 <unknown>\nE       #18 0x56287453eb20 <unknown>\nE       #19 0x562874535023 <unknown>\nE       #20 0x5628745031aa <unknown>\nE       #21 0x5628745596b8 <unknown>\nE       #22 0x562874559847 <unknown>\nE       #23 0x562874569243 <unknown>\nE       #24 0x7f417e882fd4 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1690333081454,"stop":1690333081528,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1690333081528,"stop":1690333081528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1690333216545,"stop":1690333217377,"duration":832},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1690333217377,"stop":1690333217377,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"main_page","time":{"start":1690333217378,"stop":1690333517387,"duration":300009},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 298.879\n  (Session info: headless chrome=114.0.5735.198)\nStacktrace:\n#0 0x5628745704e3 <unknown>\n#1 0x56287429fc76 <unknown>\n#2 0x562874289284 <unknown>\n#3 0x562874288fa0 <unknown>\n#4 0x5628742879bf <unknown>\n#5 0x562874288162 <unknown>\n#6 0x5628742960d5 <unknown>\n#7 0x562874297222 <unknown>\n#8 0x5628742a9bcb <unknown>\n#9 0x5628742ae3ab <unknown>\n#10 0x562874288703 <unknown>\n#11 0x5628742a99ab <unknown>\n#12 0x562874313523 <unknown>\n#13 0x5628742fade3 <unknown>\n#14 0x5628742d02dd <unknown>\n#15 0x5628742d134e <unknown>\n#16 0x5628745303e4 <unknown>\n#17 0x5628745343d7 <unknown>\n#18 0x56287453eb20 <unknown>\n#19 0x562874535023 <unknown>\n#20 0x5628745031aa <unknown>\n#21 0x5628745596b8 <unknown>\n#22 0x562874559847 <unknown>\n#23 0x562874569243 <unknown>\n#24 0x7f417e882fd4 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/pluggy/_callers.py\", line 80, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/conftest.py\", line 83, in main_page\n    driver.get(url)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 355, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"afterStages":[{"name":"setup::0","time":{"start":1690333517448,"stop":1690333517448,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver::0","time":{"start":1690333517449,"stop":1690333517513,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"Footer functionality"},{"name":"epic","value":"Main Page"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"a6e57df8e028"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"url","value":"'https://stroyrem-nn.ru/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"7bd4653282929c9b","reportUrl":"https://victoretc.github.io/StroyremAutomation/21//#testresult/7bd4653282929c9b","status":"passed","time":{"start":1690247051309,"stop":1690247051458,"duration":149}}]},"tags":["smoke_test"]},"source":"e9d91515c912a881.json","parameterValues":["'https://stroyrem-nn.ru/'"]}